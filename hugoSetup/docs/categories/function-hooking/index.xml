<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>function-hooking on Lum8rjack</title>
    <link>/categories/function-hooking/</link>
    <description>Recent content in function-hooking on Lum8rjack</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 06 Feb 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/function-hooking/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Function Hooking Part 3 - Frida</title>
      <link>/posts/function-hooking-part-3/</link>
      <pubDate>Sun, 06 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>/posts/function-hooking-part-3/</guid>
      <description>This post will wrap up the function hooking series. You can view the previous posts here:
 Function Hooking Part 1 - Test Program Function Hooking Part 2 - Password Safe  In this post I will show another method you can use to hook functions. Instead of writing an injector and DLL in C++, I will be using a tool called Frida that allows you to do the same with Python and JavaScript.</description>
    </item>
    
    <item>
      <title>Function Hooking Part 2 - Password Safe</title>
      <link>/posts/function-hooking-part-2/</link>
      <pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/function-hooking-part-2/</guid>
      <description>In this post I will expand on the information from my first post, Function Hooking Part 1 - Test Program. Previously, I discussed hooking a function from a custom application, in this post I will be hooking a function in the open-source password manager Password Safe.
As you can image, password managers are valuable targets during red team engaments since they contain additional credentials for other services or computers. If the main password to open the database is known or obtained, then all of the other credentials in the database are compromised.</description>
    </item>
    
    <item>
      <title>Function Hooking Part 1 - Test Program</title>
      <link>/posts/function-hooking-part-1/</link>
      <pubDate>Sun, 31 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/function-hooking-part-1/</guid>
      <description>I have recently been spending time learning more about reverse engineering and patching applications including fixing older programs that I do not have the source code for. I&amp;rsquo;ve started looking into function hooking and identifying how it works and different scenarios I could use it. There are a ton of articles online but most of them do not provide simple examples for starters or are focused on Windows API. While Windows API hooking is useful, I am more interested in hooking higher level functions.</description>
    </item>
    
  </channel>
</rss>